##################################################################################################################
#					   Register File Synthesis Script
##################################################################################################################

# Analyze and elaborate
analyze -library WORK -format vhdl {functions.vhd}
analyze -library WORK -format vhdl {constants.vhd}
analyze -library WORK -format vhdl {registerfile.vhd}
elaborate REGISTER_FILE -architecture BEHAVIORAL -library DEFAULT -parameters "NBIT = 64, NREG = 32, NADDR = 5"
# First compilation, without constraints
compile
# Timing and area reports after the first synthesis without constraints
report_timing > NonOpt_timing.txt
report_area > NonOpt_area.txt
# Defining the clock signal with a 2 time units period
create_clock -name "CLK" -period 2 CLK
# Second compilation, with a timing constraint on registers' path
#compile
# Timing and area reports after the second synthesis with additional clock constraint
#report_timing > CLK_timing.txt
#report_area > CLK_area.txt
# Set previous clock constraint to all inputs
set_max_delay 2 -from [all_inputs] -to [all_outputs]
compile
# Timing and area reports after the third synthesis with all paths constrained
report_timing > Opt_timing.txt
report_area > Opt_area.txt
# Saving optimized netlists
write -hierarchy -format ddc -output RF_optmized.ddc
write -hierarchy -format vhdl -output RF_optmized.vhdl
write -hierarchy -format verilog -output RF_optmized.v
